Control plane składa się z master node

Master node ma:
- scheduler
- ControllerManager/Cloud Controller Manager
- etcd
- apiserver{}


apiserver{} odpowiada za:
- uwierzytelnianie (authentication)
- autoryzacje (authorization)
- wykonanie żądania (admission)

kubelet łączy się z apiserver{} i pobiera informacje, a następnie urzuca je na worker node

na worker node są tworzone pod-y, a w podach działają aplikacje

te aplikacje mogą odczytywać jakie pody działają na klastrze, by móc przesłać info gdzieś do zewnętrznego systemu. Ta aplikacja chcąc odczytać informacje z klastra też musi się uwierzytelnić w apiserver{} i właśnie do tego jest Service Account.

Każdy z Service Account otrzymuje token i ten token jest zapisany w postaci kubernetes secret.

Przykład aplikacji która wykorzystuje te tokeny to Kubernetes Dashboard

Każdy namespace posiada domyślny Service Account o nazwie default, który zostaje automatycznie przypisany do każdego pod-a. Widać to w sekcji Mounts podczas robienia describe.

Dobrą praktyką jest wyłączanie montowania sekretów dla Service Account.

Przykład wyłączenia Service Account:

apiVersion: v1
kind: Pod
metadata:
  name: pod-reader
spec:
  automountServiceAccountToken: false  # tutaj jest wyłączenie
  containers:
  - name: pod-reader-ctr
    image: pod-reader:1.0
    ports:
    - containerPort: 80


Przykład wykorzystania własnego Service Account

apiVersion: v1
kind: Pod
metadata:
  name: pod-reader
spec:
  serviceAccountName: pod-reader-sa
  containers:
  - name: pod-reader-ctr
    image: pod-reader:1.0
    ports:
    - containerPort: 80


Jakie uprawnienia otrzymuje domyślny Service Account?
- nie ma uprawnień do wszystkiego i podczas próby połączenia się do apiserver{} otrzymamy komunikat 403
- mimo tego zgodnie z rekomendacjami bezpieczeństwa powinno się wyłączać domyślny Service Account


Jak przydzielać uprawnienia dla Service Account?
- służy do tego Role oraz RoleBinding

Przykład:
kubectl create rolebinding default-view --clusterrole=view --derviceaccount=default:default --namespace=default





# Tworzenie Service Account
kubectl create serviceaccount <nazwa_poda>

# Wyświetlenie jakie Service Account są na klastrze
kubectl get serviceaccount <nazwa_poda>

# Wyświetlenie szczegółów Service Account
kubectl describe sa <nazwa_poda>


# Wyświetlenie secretów jakie są zapisane w Kubernetes
kubectl get secret

# Wyświetlenie szczegółów tego secret
kubectl describe secret <nazwa_secret>